//
//  FavoriteRouter.swift
//  MyMovies
//
//  Created by Hazem on 6/4/19.
//  Copyright (c) 2019 Hazem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

@objc protocol FavoriteRoutingLogic
{
  func routeToMovieDetails(segue: UIStoryboardSegue?)
}

protocol FavoriteDataPassing
{
  var dataStore: FavoriteDataStore? { get }
}

class FavoriteRouter: NSObject, FavoriteRoutingLogic, FavoriteDataPassing
{
  weak var viewController: FavoriteViewController?
  var dataStore: FavoriteDataStore?
  
  // MARK: Routing to details
  
    func routeToMovieDetails(segue: UIStoryboardSegue?)
    {
        if let segue = segue {
            let destinationVC = segue.destination as! MovieDetailsViewController
            var destinationDS = destinationVC.router!.dataStore!
            passDataToMovieDetails(source: dataStore!, destination: &destinationDS)
        } else {
            let storyboard = UIStoryboard(name: "Main", bundle: nil)
            let destinationVC = storyboard.instantiateViewController(withIdentifier: "MovieDetails") as! MovieDetailsViewController
            var destinationDS = destinationVC.router!.dataStore!
            
            passDataToMovieDetails(source: dataStore!, destination: &destinationDS)
            navigateToMovieDetails(source: viewController!, destination: destinationVC)
        }
    }
    
    //MARK: Navigation
    
    func navigateToMovieDetails(source: FavoriteViewController, destination: MovieDetailsViewController)
    {
        source.show(destination, sender: nil)
    }
    
    //MARK: Passing data
    
    func passDataToMovieDetails(source: FavoriteDataStore, destination: inout MovieDetailsDataStore)
    {
        
        let selectedRow = viewController?.selectedCellIndex
        if let row = selectedRow {
            let movieId = source.moviesList[row].id!
            destination.movieId = Int(movieId) ?? 0
            
        }
    }
}
