//
//  DiscoverInteractor.swift
//  MyMovies
//
//  Created by Hazem on 6/4/19.
//  Copyright (c) 2019 Hazem. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol DiscoverBusinessLogic
{
    func loadPopularMovies()
    func loadRecentMovies()
}

protocol DiscoverDataStore
{
    var moviesList: [LocalMovie] { get set }
}
protocol DiscoverResponse :class {
    func showMoviesList(moviesList:[LocalMovie])
    func showError()
    func noInternet()
}

class DiscoverInteractor: DiscoverBusinessLogic, DiscoverDataStore,DiscoverResponse
{
    
    
    var moviesList: [LocalMovie] = [LocalMovie]()
    
   
    var presenter: DiscoverPresentationLogic?
    var worker: DiscoverWorker? = DiscoverWorker()
    //var name: String = ""
    
    // MARK: Do something
    
    func loadPopularMovies()
    {
        // TODO check for internet connection here
        presenter?.presentLoadingState(true)
        worker?.fetchMoviesWith(Discover.DiscoverMovies.Request.Popular,self)
        
    }
    
    func loadRecentMovies(){
        presenter?.presentLoadingState(true)
        worker?.fetchMoviesWith(Discover.DiscoverMovies.Request.Recent,self)
    }
    
    func showMoviesList(moviesList:[LocalMovie]) {
        self.moviesList = moviesList
        presenter?.presentLoadingState(false)
        presenter?.presentMoviesList(moviesList)
    }
    
    func showError() {
        presenter?.presentLoadingState(false)
        presenter?.presentError()
    }
    
    func noInternet() {
        presenter?.presentLoadingState(false)
        presenter?.presentNoInternetMessege()
    }
}
